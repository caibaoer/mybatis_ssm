<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://mybatis.org/schema/mybatis-spring 
	http://mybatis.org/schema/mybatis-spring.xsd
	">
	
	<!-- Spring 管理所有业务的逻辑组件等等... -->
	
	<context:component-scan base-package="com.huangpan">
			<!-- 在com.huangpan这个打包下除了controller注解不扫描，其他的注解都要扫描
			        expression的取值可以有很多种：
                    Controller:org.springframework.stereotype.Controller
                          Service:org.springframework.stereotype.Service
                   Repository:org.springframework.stereotype.Repository
                 Component :org.springframework.stereotype.Component
			 -->
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- Spring控制业务逻辑,数据源，事务，AOP -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
	    <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.user}" /> 
        <property name="password" value="${jdbc.password}" /> 
	</bean>
	<!-- spring事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 开启Spring事务注解 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 整合mybatis 
		目的：1、spring管理所有组件，包括mybatis的mapper
					service调用dao  @AutoWired自动注入
					2、spring 管理事务，spring声明式事务
	-->
	<!-- 在spring容器一启动，就会创建出SqlSessionFactory对象，就不用我们自己去创建了 -->
	<bean  id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource"  ref="dataSource"></property>
			<!-- 别名处理器 -->
			<property name="typeAliasesPackage" value="org.mybatis.jpetstore.domain" />
			<!-- configLocation指定全局配置文件的位置 -->
			<property name="configLocation"  value="classpath:mybatis-config.xml"></property>
			<!--mapperLocations 指定mapper文件的位置 -->
			<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
	</bean>
	<!-- 扫描所有的mapper接口实现，让这些mapper能够自动注入 
	base-package：指定mapper接口的包名
	需要添加xsd文件
	-->
	<mybatis:scan base-package="com.huangpan.mapper"/>
	
	
	
	
	
	
	
</beans>